---

- name: Configure apt-server
  hosts: apt
  become: yes
  roles:
    - jdauphant.nginx
  post_tasks:
    - name: Install server dependencies
      apt:
        name: reprepro
        update_cache: yes

    - name: Make directories
      file:
        state: directory
        path: "/var/repos/{{ item }}"
      with_items:
        - base
        - conf
        - debs

    - name: Copy over apt priv key
      copy:
        dest: /tmp/apt-test.priv
        src: apt-test.priv

    - name: Import apt-test key
      command: gpg --import /tmp/apt-test.priv
      ignore_errors: yes

    - name: Copy over debs
      synchronize:
        src: "{{ molecule_dir }}/../../build/"
        dest: /var/repos/debs/
        delete: yes

    - name: Establish config
      template:
        src: "distributions.j2"
        dest: "/var/repos/conf/distributions"

    - name: Run reprepo
      shell: |
        find {{dpkg_dir}} -type f -name '*.deb' -exec reprepro includedeb "{{rep_dist}}" '{}' \;
      environment:
        REPO_DIR: /var/repos
        REPREPRO_CONFIG_DIR: /var/repos/conf
        REPREPRO_BASE_DIR: /var/repos/base

    - name: Delete existing signature
      file:
        state: absent
        path: "{{ release_file }}.gpg"
      changed_when: false

    - name: Sign release file
      command:  "gpg -b -u C5D5CD3B6D65484B -o {{ release_file }}.gpg {{ release_file }}"
      changed_when: false

    - name: Copy pub key in-place
      copy:
        src: apt-test.pub
        dest: /var/repos/base/apt-test.pub

  vars:
    molecule_dir: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
    dpkg_dir: /var/repos/debs
    rep_dist: trusty
    rep_component: main
    rep_arch: i386 amd64
    release_file: "/var/repos/base/dists/{{ rep_dist }}/Release"
    nginx_sites:
      default:
        - listen 80
        - root "/var/repos/base"
        - location / { autoindex on; }

